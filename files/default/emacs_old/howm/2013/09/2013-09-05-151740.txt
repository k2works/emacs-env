= brewでインストールしたmysqlの設定
[2013-09-05 15:17]
MacBook-Air:~:-bash$mysql_install_db --verbose --user=`k2works` --basedir="$(brew --prefix mysql)" --datadir=/usr/local/var/mysql --tmpdir=/tmp
-bash: k2works: command not found
Installing MySQL system tables...2013-09-05 15:16:28 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).
2013-09-05 15:16:28 2710 [Note] InnoDB: The InnoDB memory heap is disabled
2013-09-05 15:16:28 2710 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins
2013-09-05 15:16:28 2710 [Note] InnoDB: Compressed tables use zlib 1.2.3
2013-09-05 15:16:28 2710 [Note] InnoDB: CPU does not support crc32 instructions
2013-09-05 15:16:28 2710 [Note] InnoDB: Initializing buffer pool, size = 128.0M
2013-09-05 15:16:28 2710 [Note] InnoDB: Completed initialization of buffer pool
2013-09-05 15:16:28 2710 [Note] InnoDB: Highest supported file format is Barracuda.
2013-09-05 15:16:28 2710 [Note] InnoDB: 128 rollback segment(s) are active.
2013-09-05 15:16:28 2710 [Note] InnoDB: Waiting for purge to start
2013-09-05 15:16:28 2710 [Note] InnoDB: 1.2.10 started; log sequence number 1625987
2013-09-05 15:16:29 2710 [Note] Binlog end
2013-09-05 15:16:29 2710 [Note] InnoDB: FTS optimize thread exiting.
2013-09-05 15:16:29 2710 [Note] InnoDB: Starting shutdown...
2013-09-05 15:16:30 2710 [Note] InnoDB: Shutdown completed; log sequence number 1625997
OK

Filling help tables...2013-09-05 15:16:30 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).
2013-09-05 15:16:30 2711 [Note] InnoDB: The InnoDB memory heap is disabled
2013-09-05 15:16:30 2711 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins
2013-09-05 15:16:30 2711 [Note] InnoDB: Compressed tables use zlib 1.2.3
2013-09-05 15:16:30 2711 [Note] InnoDB: CPU does not support crc32 instructions
2013-09-05 15:16:30 2711 [Note] InnoDB: Initializing buffer pool, size = 128.0M
2013-09-05 15:16:30 2711 [Note] InnoDB: Completed initialization of buffer pool
2013-09-05 15:16:30 2711 [Note] InnoDB: Highest supported file format is Barracuda.
2013-09-05 15:16:30 2711 [Note] InnoDB: 128 rollback segment(s) are active.
2013-09-05 15:16:30 2711 [Note] InnoDB: Waiting for purge to start
2013-09-05 15:16:30 2711 [Note] InnoDB: 1.2.10 started; log sequence number 1625997
2013-09-05 15:16:30 2711 [Note] Binlog end
2013-09-05 15:16:30 2711 [Note] InnoDB: FTS optimize thread exiting.
2013-09-05 15:16:30 2711 [Note] InnoDB: Starting shutdown...
2013-09-05 15:16:31 2711 [Note] InnoDB: Shutdown completed; log sequence number 1626007
OK

To start mysqld at boot time you have to copy
support-files/mysql.server to the right place for your system

PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !
To do so, start the server, then issue the following commands:

  /usr/local/opt/mysql/bin/mysqladmin -u root password 'new-password'
    /usr/local/opt/mysql/bin/mysqladmin -u root -h MacBook-Air.local password 'new-password'

    Alternatively you can run:

      /usr/local/opt/mysql/bin/mysql_secure_installation

      which will also give you the option of removing the test
      databases and anonymous user created by default.  This is
      strongly recommended for production servers.

      See the manual for more instructions.

      You can start the MySQL daemon with:

        cd . ; /usr/local/opt/mysql/bin/mysqld_safe &

        You can test the MySQL daemon with mysql-test-run.pl

          cd mysql-test ; perl mysql-test-run.pl

          Please report any problems with the ./bin/mysqlbug script!

          The latest information about MySQL is available on the web at

            http://www.mysql.com

            Support MySQL by buying support/licenses at http://shop.mysql.com

            WARNING: Found existing config file /usr/local/opt/mysql/my.cnf on the system.
            Because this file might be in use, it was not replaced,
            but was used in bootstrap (unless you used --defaults-file)
            and when you later start the server.
            The new default config file was created as /usr/local/opt/mysql/my-new.cnf,
            please compare it with your file and take the changes you need.


MacBook-Air:~:-bash$mysql.server start
Starting MySQL
. SUCCESS!
            
MacBook-Air:~:-bash$/usr/local/opt/mysql/bin/mysql_secure_installation



NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MySQL
      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!

      In order to log into MySQL to secure it, we'll need the current
      password for the root user.  If you've just installed MySQL, and
      you haven't set the root password yet, the password will be blank,
      so you should just press enter here.

      Enter current password for root (enter for none):
      ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)
      Enter current password for root (enter for none):
      ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)
      Enter current password for root (enter for none):
      OK, successfully used password, moving on...

      Setting the root password ensures that nobody can log into the MySQL
      root user without the proper authorisation.

      Set root password? [Y/n] Y
      New password:
      Re-enter new password:
      Password updated successfully!
      Reloading privilege tables..
       ... Success!


       By default, a MySQL installation has an anonymous user, allowing anyone
       to log into MySQL without having to have a user account created for
       them.  This is intended only for testing, and to make the installation
       go a bit smoother.  You should remove them before moving into a
       production environment.

       Remove anonymous users? [Y/n] Y
        ... Success!

        Normally, root should only be allowed to connect from 'localhost'.  This
        ensures that someone cannot guess at the root password from the network.

        Disallow root login remotely? [Y/n] Y
         ... Success!

         By default, MySQL comes with a database named 'test' that anyone can
         access.  This is also intended only for testing, and should be removed
         before moving into a production environment.

         Remove test database and access to it? [Y/n] n
          ... skipping.

          Reloading the privilege tables will ensure that all changes made so far
          will take effect immediately.

          Reload privilege tables now? [Y/n] Y
           ... Success!




           All done!  If you've completed all of the above steps, your MySQL
           installation should now be secure.

           Thanks for using MySQL!


           Cleaning up...


[HomebrewでMySQLをインストールする時に知っておきたいこと](http://tukaikta.blog135.fc2.com/blog-entry-197.html)           
