= Amazon Web Services プログラミング
[2013-04-02 15:05] 
* プログラミングAWS
** AWSの紹介
   + 0からAWSへ
   + アプリケーションへの成長
   + "You Build it, You Run It"
** EC2,RDS,S3/CloudFrontから始めよう
*** 環境の設定
     + [[https://portal.aws.amazon.com/gp/aws/securityCredentials][AWSのセキュリテリ証明書]]
     + コマンドラインツールのインストール
       + [[http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/SettingUp_CommandLine.html][EC2]]
       + [[http://aws.amazon.com/developertools/2928][RDS]]
*** 地理的な場所、リージョン、アベラビリティゾーンの選択
     + リージョン
     + アベイラビリティゾーン
*** アーキテクチャの選択
     + エッジロケーション
       + CloudFront
     + ロジック＋プレゼンテーション
       + EC2インスタンス(Railsサーバー)
       + CloudFront(静的コンテンツ)
     + データ
       + RDSインスタンス(MySQLデータベース)
       + S3(静的コンテンツ)
*** EC2上でのRailsサーバーの生成
     - 鍵ペアの作成
       AWSコンソールのKey PairsよりCreate Key Pairを実行する
     - 適切なAMIの探し方
     - Web/アプリケーションサーバーのセットアップ
       - インスタンスの起動(Request Instances Wizard)
         - CHOOSE AN AMI
         - INSTANCE DETAILS
           + Number of Instances
           + Instance Type
           + Launch Instances
           + Request Spot Instances
           + Kernel ID
           + RAM Disk ID
           + Monitoring
           + User Data
           + Termination Protection
           + Shutdown Behavior
           + IAM Role
           + Storage Device Configuration
           + Add tags
         - CREATE KEY PAIR
           + Choose from your existing Key Pairs
           + Create a new Key Pair
           + Proceed without a Key Pair
         - CONFIGRE FIRWALL
           + Group Name
           + Group Description
           + Inbound Rules
         - REVIEW
           + AMI
             + Name
             + Description
           + Instance Details
             + Number of Instances
             + Availability Zone
             + Instance Type
             + Instance Class
             + EBS-Optimized
           + Advanced Details
             + Monitoring
             + Tenancy
             + Kernel ID
             + RAM Disk ID
             + Network Interface
             + Secondary IP Address
             + User Data
             + IAM Role
             + Termination Protecton
             + Shutdown Behavior
           + Key Pair
             + Key Pair Name
           + Firewall
             + Security Group(s)
       - インスタンスの設定
       - EBSボリュームの生成と利用
         + [[http://aws.amazon.com/jp/ebs/][Amazon Elastic Block Store(EBS)]]
           - Amazon EBSボリュームの特徴
           - Amazon EBSボリュームの使用
           - Amazon EBSボリュームのパフォーマンス
           - Amazon EBSボリュームの耐久性
           - Amazon EBSスナップショット
           - 費用の見積もり
         + [[http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html][Amazon Elastic Blaock Store(Amazon EBS)]]
           - Key Features of EBS Volumes
           - EBS Volume Types
           - Common Tasks
           - Increasing EBS Performance
           - Creating an Amazon EBS Volume
           - Attaching a Volume to an Instance
           - Describing Volumes
           - Making an Amazon EBS Volume Available for Use
           - Monitoring the Status of Your Volumes
           - Detaching an Amazon EBS Volume from an Instance
           - Deleting an Amazon EBS Volume
           - Creating an Amazon EBS Snapshot
           - Copying an Amazon EBS Snapshot
           - Describing Snapshots
           - Modifying Snapshot Permissions
           - Deleting an Amazon EBS Snapshot
           - Expanding the Storage Space of a Volume
           - Using Public Data Sets
           - Amazon EBS API and Command Overview
         + [[http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ComponentsAMIs.html#storage-for-the-root-device][Storage for the Root Device]]
         + [[http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html][Root Device Volume]]
         + [[http://sartord.blog6.fc2.com/blog-category-4.html][Amazon Elastic Block Store(EBS)をmysqlに利用]]
         + [[http://dev.koba206.com/?p=216][EBSボリュームをEC2インスタンスに接続する方法]]
       - EIPの生成と割当
       - ソフトウェアのインストール
         + [[http://www.oiax.jp/rails3book/deploy.html][Rails本番環境構築ガイド]]
           - VirtualBoxによる仮想マシンのインストール
             + ネットワークの設定(1)               
             + ネットワークの設定(2)
                /etc/network/interfaces
                auto eth1
                iface eth1 inet static
                address 192.168.56.2
                netmask 255.255.255.0
             + hostsファイルの書き換え
                /private/etc
                192.168.56.2  asagao.oiax.jp
           - サーバーの準備（Ubuntu Server 12.04 LTS編）  
             % sudo apt-get update
             % sudo apt-get upgrade
             % sudo apt-get install build-essential automake git
             % sudo apt-get install zlib1g-dev libssl-dev libreadline6-dev libyaml-dev libxml2-dev libxslt-dev
             % sudo apt-get install libsqlite3-dev libcurl4-openssl-dev
             % sudo apt-get install apache2 openssh-server apache2-prefork-dev libapr1-dev libaprutil1-dev
             % sudo apt-get install imagemagick libmagickwand-dev
           - Ruby 1.9.3のインストール
             % mkdir ~/src
             % cd ~/src
             % wget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.tar.gz
             % tar xzf ruby-1.9.3-p392.tar.gz
             % cd ruby-1.9.3-p392
             % ./configure
             % make
             % sudo make install
           - Railsアプリケーションのセットアップ
             + railsユーザーの作成
              % sudo useradd -m -d /var/rails rails
              % sudo passwd rails
              % sudo chmod 750 /var/rails
             + Apache実行ユーザーをグループに追加
              % sudo gpasswd -a www-data rails
             + Bundlerのインストール
              % sudo gem install bundler --no-ri --no-rdoc
             + Railsアプリケーションの設置
              ローカルマシンで asagao ディレクトリをZIP形式で圧縮し、リモートマシンの /var/rails ディレクトリに転送します。
              % sudo su - rails
              % tar cvfz railsdemo.tar.gz
              % cd railsdemo
              % bundle install --path=../bundle
              % RAILS_ENV=production rake db:setup
              % rake assets:precompile
              ここで、
              rake abord
              Could not find a JavaScript runtime. See https://github.com/sstephenson/execjs for a list of available runtimes.
              というエラーメッセージが表示された場合には、Gemfileにある
              # gem 'therubyracer'
              という行のコメント記号(#)を除去して、bundle install コマンドと rake assets:precompile コマンドを順に実行してください。
           - ApacheとPhusion Passengerのセットアップ
             + [[http://gihyo.jp/admin/serial/01/unix/0005][知っておきたいApacheの基礎知識 その1]]
             + Phusion Passengerのインストール
              % sudo gem install passenger --no-ri --no-rdoc
              % sudo passenger-install-apache2-module             
             + Apacheの準備
               % sudo -s
               $ mkdir /var/www/html
               $ cd /etc
               $ ln -s apache2 httpd
               $ cd httpd
               $ echo "ServerName www.example.com:80" >> httpd.conf
             + Phusion PassengerをApacheに組み込む
               /etc/httpd/conf.d/passenger.conf
                LoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.19/ext/apache2/mod_passenger.so
                PassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.19
                PassengerRuby /usr/local/bin/ruby
             + バーチャルホストの追加
               /etc/httpd/sites-available/default 
               <VirtualHost *:80>
                 DocumentRoot /var/www/html
                 <Directory /var/www/html>
                   AllowOverride all
                   Options None
                   Order Deny,Allow
                   Deny from All
                 </Directory>
               </VirtualHost>

               /etc/httpd/sites-available/railsdemo
               <VirtualHost *:80>
                ServerName http://ec2-54-248-228-199.ap-northeast-1.compute.amazonaws.com/
                DocumentRoot /var/rails/railsdemo/public
                RackEnv production
                <Directory /var/rails/railsdemo/public>
                  AllowOverride all
                  Options -MultiViews
                </Directory>
               </VirtualHost>
               
               $ ln -s /etc/httpd/sites-available/asagao /etc/httpd/sites-enabled/001-asagao
               EC2ではバーチャルホストがうまくいかない
               + Apacheの再起動
                $ service apache2 restart
           - データベースとの接続（MySQL編）
           - Capistranoによるデプロイ
           - Gitレポジトリの作成
           - 続・Capistranoによるデプロイ
       - カスタムイメージの作成
         #インスタンスを明示的に停止させ、ボリュームをデタッチする
         $ec2-stop-instances i-bb32d8b9
         $ec2-detach-volume vol-e4bdf3c6

         #指定した名前で、このインスタンスのイメージを生成する
         $ec2-create-image i-bb32d8b9 -n app-server-20130405 -d 'Rails Application Server'
         
         #インスタンスを立ち上げ直し、ボリュームをアタッチし、Elastic IPを割り当てる
         $ec2-start-instances i-bb32d8b9
         $ec2-attach-volume vol-e4bdf3c6 -i i-bb32d8b9 -d /dev/sdf
         $ec2-associate-address 54.248.228.199 -i i-bb32d8b9
       - ブート/起動時のインスタンスのプロビジョニング
         + ツールのインストール
         + 起動スクリプトの作成
           /etc/init.d/ec2
           マウントするデバイスがAWSでは/dev/sdfの場合OSでは/dev/xvdfに書き換えられるので注意
           $ update-rc.d ec2 defaults
       - ユーザーデータ
*** RDSデータベース
    + DB Security Groups
      $rds-create-db-security-group production --db-security-group-description 'this RDS is only available on the necessary ports'
      $rds-authorize-db-security-group-ingress production --cidr-ip 0.0.0.0/0
      $ds-authorize-db-security-group-ingress production --ec2-security-group-name web --ec2-security-group-owner-id 262470114399
    + DB Instances
      - ENGINE SELECTION
      - DB INSTANCE DETAILS
        + DB Engine
        + License Model
        + DB Engine Version
        + DB Instance Class
        + Multi-AZ Deployment
        + Auto Minor Version Upgrade
        + Allocated Storage
        + Use Provisioned IOPS
        + DB Instance Identifier
        + Master Username
        + Master Password
      - ADDITIONAL CONFIGURATION
        + Database Name
        + Choose a VPC
        + Availabilty Zone
        + Option Group
        + Parameter Group
        + DB Security Group(s)
      - MANAGEMENT OPTIONS
        + Backup Retention Period
        + Backup Window
        + Maintenace Window 
      $rds-create-db-instance production --engine MySQL --engine-version 5.5.27 --db-instance-class db.t1.micro --allocated-storage 5 --master-username rails --master-user-password rails123 --db-security-groups production --backup-retention-period 3
*** S3/CloudFron
*** ボリュームのバックアップの作成
*** まとめ
** S3,ELB,Auto Scaling,RDSで成長
** SQS,SimpleDB,SNSによるデカップリング
** 不可避なダウンタイムの管理
** 稼働時間の向上
** デカップリングされたシステムの管理
** 今後に向けて
* Elastic Beanstalk
** Elastic Beanstalkを使ってみよう
** Elastic Beanstalkでの作業
** Elastic Beanstalのハック
